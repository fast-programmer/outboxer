#!/usr/bin/env ruby

require 'bundler/setup'
require 'outboxer'

require 'sidekiq'

require_relative '../app/models/event'
require_relative '../app/jobs/event_created_job'

environment = ENV['RAILS_ENV'] || 'development'
config = Outboxer::Database.config(environment: environment)
Outboxer::Database.connect!(config: config.merge('pool' => 5))

Sidekiq.configure_client do |config|
  redis_url = ENV['REDIS_URL'] || 'redis://localhost:6379/0'
  config.redis = { url: redis_url, size: 4 }
end

logger = Outboxer::Logger.new($stdout, level: Outboxer::Logger::DEBUG)

Outboxer::Publisher.publish!(
  thread_count: 4,
  queue_size: 8,
  poll_interval: 1,
  logger: logger
) do |outboxer_message|
  case outboxer_message.outboxer_messageable_type
  when 'Event'
    EventCreatedJob.perform_async({ 'id' => outboxer_message.outboxer_messageable_id })
  end
end

# bin/sidekiq_publisher
# RAILS_ENV=development bin/sidekiq_publisher
# RAILS_ENV=development REDIS_URL=redis://localhost:6379/1 bin/sidekiq_publisher
