#!/usr/bin/env ruby

require 'bundler/setup'
require 'outboxer'
require 'sidekiq'

def fetch_process_stats(pid)
  stats = `ps -p #{pid} -o rss=,pcpu=,etime=,vsz=`.strip
  rss, cpu, elapsed, vsz = stats.split(" ")
  rss_mb = rss.to_i / 1024
  vsz_mb = vsz.to_i / 1024
  { pid: pid, rss_mb: rss_mb, cpu: cpu, elapsed: elapsed, vsz_mb: vsz_mb }
end

def sidekiq_publisher_pids
  `pgrep -f bin/sidekiq_publisher$`.strip.split("\n")
end

environment = ENV['RAILS_ENV'] || 'development'
config = Outboxer::Database.config(environment: environment)
Outboxer::Database.connect!(config: config.merge('pool' => 1))

Signal.trap("SIGINT") do
  puts "\nExiting gracefully..."
  exit
end

loop do
  system("clear") || system("cls")

  total_backlogged = nil
  total_publishing = nil
  total_failed = nil

  ActiveRecord::Base.connection_pool.with_connection do
    total_backlogged = Outboxer::Models::Message.backlogged.count
    total_publishing = Outboxer::Models::Message.publishing.count
    total_failed = Outboxer::Models::Message.failed.count
  end

  pids = sidekiq_publisher_pids.sort

  puts "Outboxer Report"
  puts Time.now.utc
  puts "\n---- Overview ----"
  puts format("%-15s: %-10s", "Backlogged", total_backlogged)
  puts format("%-15s: %-10s", "Publishing", total_publishing)
  puts format("%-15s: %-10s", "Failed", total_failed)

  if pids.empty?
    puts "\nbin/sidekiq_publisher processes not found."
  else
    puts "\n---- Process Stats ----"
    pids.each do |pid|
      stats = fetch_process_stats(pid)
      puts "PID #{stats[:pid]}:"
      puts format("  %-15s: %-10s MB", "Memory Usage", stats[:rss_mb])
      puts format("  %-15s: %-10s %%", "CPU Usage", stats[:cpu])
      puts format("  %-15s: %-10s", "Running Time", stats[:elapsed])
      puts format("  %-15s: %-10s MB", "Virtual Memory", stats[:vsz_mb])
      puts
    end
  end

  sleep(1)
end
