#!/usr/bin/env ruby

require 'bundler/setup'

require 'sidekiq'
require 'outboxer'
require 'statsd-ruby'

environment = ENV['RAILS_ENV'] || 'development'

require_relative '../app/jobs/event/created_job'

Sidekiq.configure_client do |config|
  config.redis = { url: ENV['REDIS_URL'], size: 25 }
end

logger = Outboxer::Logger.new($stdout, level: Logger::INFO)

db_config = Outboxer::Database.config(environment: environment)
Outboxer::Database.connect(config: db_config, logger: logger)

['INT', 'TERM'].each do |signal|
  Signal.trap(signal) do
    Outboxer::Messages.stop_publishing
  end
end

Outboxer::Messages.publish(
  num_worker_threads: 5,
  max_queue_size: 1000,
  poll_interval: 1,
  logger: logger,
  statsd: ::Statsd.new('localhost', 8125),
  log_metrics_interval: 5
) do |message|
  case message[:messageable_type]
  when 'Event'
    Event::CreatedJob.perform_async({ 'id' => message[:messageable_id] })
  end
end

Outboxer::Database.disconnect(logger: logger)
