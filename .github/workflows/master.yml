name: Ruby

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }} with ${{ matrix.database }}
    strategy:
      matrix:
        ruby:
          - '3.3.0'
        include:
          - database: 'PostgreSQL'
            db_image: 'postgres:latest'
            db_env:
              POSTGRES_USER: outboxer_developer
              POSTGRES_PASSWORD: outboxer_password
              POSTGRES_DB: outboxer_test
            db_port: ['5432:5432']
            health_cmd: 'pg_isready -U outboxer_developer'
    services:
      db:
        image: ${{ matrix.db_image }}
        env: ${{ matrix.db_env }}
        ports: ${{ matrix.db_port }}
        options: --health-cmd "${{ matrix.health_cmd }}" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Check Database
      run: |
        case "${{ matrix.database }}" in
          PostgreSQL)
            sudo apt-get -qq install -y postgresql-client
            export PGPASSWORD=$DB_PASSWORD
            psql -h localhost -U $DB_USER -d $DB_NAME -c 'SELECT version();'
            ;;
          MySQL)
            sudo apt-get -qq install -y mysql-client
            export MYSQL_PWD=$DB_PASSWORD
            mysql -h 127.0.0.1 -u $DB_USER --password=$DB_PASSWORD -D $DB_NAME -e "SHOW DATABASES;"
            ;;
          MariaDB)
            sudo apt-get -qq install -y mariadb-client
            export MYSQL_PWD=$DB_PASSWORD
            mysql -h 127.0.0.1 -u $DB_USER --password=$DB_PASSWORD -D $DB_NAME -e "SHOW DATABASES;"
            ;;
        esac
    - name: Run Database Migrations
      run: RAILS_ENV=test bin/rake outboxer:db:migrate
    - name: Run the default task
      run: RAILS_ENV=test bin/rspec spec
